{"name":"me.jsonet.jshook","description":"用js写hook / JsHook","url":"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook","homepageUrl":"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook","collaborators":[{"login":"etjson","name":"jsonet"}],"latestRelease":"v1.0.15","releases":[{"name":"v1.0.15","url":"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/releases/tag/v1.0.15","isDraft":false,"description":"- 新增深色主题\r\n- 新增免root模式(支持在没有root环境的机型上启用hook服务)\r\n- 脚本管理存储db转为file(需要重新勾选启用脚本)\r\n- 新增工具集(目前只有一个小工具)\r\n- 脚本编辑器调整为ace\r\n- firda加入防检测补丁(需要版本>=15.1.27.1)\r\n- firdamod加入防检测补丁(需要版本>=15.1.27.2)\r\n- 离线模式调整为自动\r\n- 其它问题修复\r\n---\r\n- Added dark theme\r\n- Added root-free mode (support to enable hook service on models without root environment)\r\n- Script management storage db to file(Need to re-check Enable script)\r\n- Added toolset (currently only one widget)\r\n- Script editor adjusted to ace\r\n- Add anti-detection patch to firda (requires version >= 15.1.27.1)\r\n- Add anti-detection patch to firdamod (requires version >= 15.1.27.2)\r\n- Offline mode adjusted to automatic\r\n- Other bug fixes","descriptionHTML":"<ul>\n<li>新增深色主题</li>\n<li>新增免root模式(支持在没有root环境的机型上启用hook服务)</li>\n<li>脚本管理存储db转为file(需要重新勾选启用脚本)</li>\n<li>新增工具集(目前只有一个小工具)</li>\n<li>脚本编辑器调整为ace</li>\n<li>firda加入防检测补丁(需要版本&gt;=15.1.27.1)</li>\n<li>firdamod加入防检测补丁(需要版本&gt;=15.1.27.2)</li>\n<li>离线模式调整为自动</li>\n<li>其它问题修复</li>\n</ul>\n<hr>\n<ul>\n<li>Added dark theme</li>\n<li>Added root-free mode (support to enable hook service on models without root environment)</li>\n<li>Script management storage db to file(Need to re-check Enable script)</li>\n<li>Added toolset (currently only one widget)</li>\n<li>Script editor adjusted to ace</li>\n<li>Add anti-detection patch to firda (requires version &gt;= 15.1.27.1)</li>\n<li>Add anti-detection patch to firdamod (requires version &gt;= 15.1.27.2)</li>\n<li>Offline mode adjusted to automatic</li>\n<li>Other bug fixes</li>\n</ul>","createdAt":"2022-06-27T09:36:44Z","publishedAt":"2022-06-27T09:37:57Z","updatedAt":"2022-06-27T09:38:29Z","tagName":"v1.0.15","isPrerelease":false,"releaseAssets":[{"name":"app-release.apk","contentType":"application/vnd.android.package-archive","downloadUrl":"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/releases/download/v1.0.15/app-release.apk"}]}],"readme":"<div align=\"center\">\n<h1>JsHook</h1>\n\n[![Xposed](https://img.shields.io/badge/-Xposed-3DDC84?style=flat&logo=Android&logoColor=white)](#)\n[![GitHub release](https://img.shields.io/github/release/Xposed-Modules-Repo/me.jsonet.jshook.svg)](https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/releases/latest)\n[![Telegram](https://img.shields.io/static/v1?label=Telegram&message=Channel&color=0088cc)](https://t.me/jshookapp)\n[![Telegram](https://img.shields.io/static/v1?label=Telegram&message=Chat&color=0088cc)](https://t.me/jshookgroup)\n\nandroid中hook神器 支持java层和native层\n\n[README of English](https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/blob/main/README.en.md)\n</div>\n\n## 关于\n\nxposed是一个模块框架，可以在不接触任何apk的情况下更改系统和应用程序的行为。这意味着模块可以在不同版本甚至rom上工作而无需任何更改。\n\njshook是对app注入rhino/frida，xposed模块开发需要一定的java语法基础，技术门槛高，而jshook注入的rhino/frida只需要会简短的js，即可用手机快速实现hook，并且hook支持java层和native层。\n\n## 兼容\n\n1. Xposed api 82\n2. Android 5 - 12\n\n## 如何使用\n\n### 如何启用脚本\n\n启用脚本前请确认选择的应用已开启hook服务选项，如果是lsposed非全局作用域在激活时除了勾选系统还需勾选对应脚本生效的应用，每次更改脚本内容都需要重启一下被hook的app。\n\n### 如何选择注入框架\n\n如果你对xposed的hook方法比较熟，推荐rhino，使用js调用xposed框架的api，且兼容性高；而frida属于另一个hook框架，需要对frida有一定的了解，上手较难，且不支持部分机型和app。\n\n```js\ncommon.hookAllMethods('android.app.Application', 'onCreate', function (param) {\n    //你的脚本代码\n});\n```\n\n## 脚本说明\n\n### 通用\n\n日志打印：\n\n```js\ncommon.log('...');\n```\n\n消息提示：\n\n```js\ncommon.toast('...');\n```\n\n获取Context：\n\n```js\ncommon.getcontext();\n```\n\n### rhino\n\n获取LoadPackageParam\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getlpparam</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td colspan=\"4\" align=\"center\">无</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.getlpparam();\n```\n\n获取类实例\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">findClass</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>classLoader</td>\n<td>ClassLoader</td>\n<td>类加载器</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.findClass('com.test.test',classLoader);\n```\n\nhook构造函数\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllConstructors</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.hookAllConstructors('com.test.test', function (param) {\n    //构造函数执行前\n    //打印构造函数接收到的第一个参数\n    common.log(param.args[0]);\n    //修改这个参数的值\n    param.args[0] = 'fuck';\n}, function (param) {\n    //构造函数执行后\n    //...\n});\n```\n\nhook指定参数的构造函数\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookConstructor</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.hookConstructor('com.test.test', ['java.lang.String', 'int'], function (param) {\n    //...\n}, function (param) {\n    //...\n});\n```\n\nhook类方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllMethods</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.hookAllMethods('com.test.test', 'methodname', function (param) {\n    //...\n}, function (param) {\n    //...\n}, function (param) {\n    //调用原方法返回\n    return common.thisMethod(param);\n});\n```\n\nhook指定的类方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookByMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>method</td>\n<td>Method</td>\n<td>方法对象</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.hookByMethod(method, function (param) {\n    //...\n    //修改返回值\n    param.setResult('fuck');\n}, function (param) {\n    //...\n    //获取类方法的返回值并打印\n    common.log(param.getResult());\n});\n```\n\nhook指定参数的类方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.hookMethod('com.test.test', 'methodname', ['java.lang.String', 'int'], function (param) {\n    //...\n    //修改返回值\n    param.setResult('fuck');\n}, function (param) {\n    //...\n    //获取类方法的返回值并打印\n    common.log(param.getResult());\n});\n```\n\n修改静态变量值\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.setStaticObjectField('com.test.test', '变量名', '变量值');\n```\n\n修改动态变量值\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.setObjectField('com.test.test', '变量名', '变量值');\n//或者\n//param.thisObject 在hook回调方法中获取\ncommon.setObjectField(param.thisObject, '变量名', '变量值');\n```\n\n获取静态变量值\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.getStaticObjectField('com.test.test', '变量名');\n```\n\n获取动态变量值\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.getObjectField('com.test.test', '变量名');\n```\n\n主动调用动态方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.callMethod('com.test.test', 'methodname', ['a', 1]);\n```\n\n主动调用静态方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callStaticMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\ncommon.callStaticMethod('com.test.test', 'methodname', ['a', 1]);\n```\n\n`replaceHookedMethod`中调用原方法\n\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">thisMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>param</td>\n<td>Object</td>\n<td>参数</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n\n示例：\n\n```js\n//param在replaceHookedMethod中获取\ncommon.thisMethod(param);\n```\n\n[查看更多](https://p-bakker.github.io/rhino/tutorials/scripting_java/)\n\n### frida\n\n[查看更多](https://frida.re/docs/javascript-api/)\n","readmeHTML":"<div align=\"center\">\n<h1>\n<a id=\"user-content-jshook\" class=\"anchor\" href=\"#jshook\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>JsHook</h1>\n<p><a href=\"#\"><img src=\"https://camo.githubusercontent.com/094a6e7491c3b071010a8e0da6eae82f1cd7decb867124a228cf2af5841175cf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d58706f7365642d3344444338343f7374796c653d666c6174266c6f676f3d416e64726f6964266c6f676f436f6c6f723d7768697465\" alt=\"Xposed\" data-canonical-src=\"https://img.shields.io/badge/-Xposed-3DDC84?style=flat&amp;logo=Android&amp;logoColor=white\" style=\"max-width:100%;\"></a>\n<a href=\"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/releases/latest\"><img src=\"https://camo.githubusercontent.com/6703675b47e49d6b28c7567e55be381438f9fbe1d3661cf2794b3f277fa70bd7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f58706f7365642d4d6f64756c65732d5265706f2f6d652e6a736f6e65742e6a73686f6f6b2e737667\" alt=\"GitHub release\" data-canonical-src=\"https://img.shields.io/github/release/Xposed-Modules-Repo/me.jsonet.jshook.svg\" style=\"max-width:100%;\"></a>\n<a href=\"https://t.me/jshookapp\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/03de7bebff145acc136c336f6a9fb9a3de12ece180e3abc35b09e81d02646e7e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d54656c656772616d266d6573736167653d4368616e6e656c26636f6c6f723d303038386363\" alt=\"Telegram\" data-canonical-src=\"https://img.shields.io/static/v1?label=Telegram&amp;message=Channel&amp;color=0088cc\" style=\"max-width:100%;\"></a>\n<a href=\"https://t.me/jshookgroup\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/b79856a1d2799cd1c70f42d75e858c41b61f627ce23a5e01387f46e86127ed3e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d54656c656772616d266d6573736167653d4368617426636f6c6f723d303038386363\" alt=\"Telegram\" data-canonical-src=\"https://img.shields.io/static/v1?label=Telegram&amp;message=Chat&amp;color=0088cc\" style=\"max-width:100%;\"></a></p>\n<p>android中hook神器 支持java层和native层</p>\n<p><a href=\"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/blob/main/README.en.md\">README of English</a></p>\n</div>\n<h2>\n<a id=\"user-content-关于\" class=\"anchor\" href=\"#%E5%85%B3%E4%BA%8E\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>关于</h2>\n<p>xposed是一个模块框架，可以在不接触任何apk的情况下更改系统和应用程序的行为。这意味着模块可以在不同版本甚至rom上工作而无需任何更改。</p>\n<p>jshook是对app注入rhino/frida，xposed模块开发需要一定的java语法基础，技术门槛高，而jshook注入的rhino/frida只需要会简短的js，即可用手机快速实现hook，并且hook支持java层和native层。</p>\n<h2>\n<a id=\"user-content-兼容\" class=\"anchor\" href=\"#%E5%85%BC%E5%AE%B9\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>兼容</h2>\n<ol>\n<li>Xposed api 82</li>\n<li>Android 5 - 12</li>\n</ol>\n<h2>\n<a id=\"user-content-如何使用\" class=\"anchor\" href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>如何使用</h2>\n<h3>\n<a id=\"user-content-如何启用脚本\" class=\"anchor\" href=\"#%E5%A6%82%E4%BD%95%E5%90%AF%E7%94%A8%E8%84%9A%E6%9C%AC\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>如何启用脚本</h3>\n<p>启用脚本前请确认选择的应用已开启hook服务选项，如果是lsposed非全局作用域在激活时除了勾选系统还需勾选对应脚本生效的应用，每次更改脚本内容都需要重启一下被hook的app。</p>\n<h3>\n<a id=\"user-content-如何选择注入框架\" class=\"anchor\" href=\"#%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E6%B3%A8%E5%85%A5%E6%A1%86%E6%9E%B6\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>如何选择注入框架</h3>\n<p>如果你对xposed的hook方法比较熟，推荐rhino，使用js调用xposed框架的api，且兼容性高；而frida属于另一个hook框架，需要对frida有一定的了解，上手较难，且不支持部分机型和app。</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookAllMethods</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'android.app.Application'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'onCreate'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//你的脚本代码</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2>\n<a id=\"user-content-脚本说明\" class=\"anchor\" href=\"#%E8%84%9A%E6%9C%AC%E8%AF%B4%E6%98%8E\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>脚本说明</h2>\n<h3>\n<a id=\"user-content-通用\" class=\"anchor\" href=\"#%E9%80%9A%E7%94%A8\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>通用</h3>\n<p>日志打印：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'...'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>消息提示：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toast</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'...'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>获取Context：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getcontext</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3>\n<a id=\"user-content-rhino\" class=\"anchor\" href=\"#rhino\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>rhino</h3>\n<p>获取LoadPackageParam</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getlpparam</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td colspan=\"4\" align=\"center\">无</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getlpparam</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>获取类实例</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">findClass</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>classLoader</td>\n<td>ClassLoader</td>\n<td>类加载器</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">findClass</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span><span class=\"pl-s1\">classLoader</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>hook构造函数</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllConstructors</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookAllConstructors</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//构造函数执行前</span>\n    <span class=\"pl-c\">//打印构造函数接收到的第一个参数</span>\n    <span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">args</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-c\">//修改这个参数的值</span>\n    <span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">args</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'fuck'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//构造函数执行后</span>\n    <span class=\"pl-c\">//...</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>hook指定参数的构造函数</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookConstructor</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookConstructor</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'java.lang.String'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'int'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>hook类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllMethods</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookAllMethods</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'methodname'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//调用原方法返回</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">thisMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>hook指定的类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookByMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>method</td>\n<td>Method</td>\n<td>方法对象</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookByMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">method</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n    <span class=\"pl-c\">//修改返回值</span>\n    <span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setResult</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fuck'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n    <span class=\"pl-c\">//获取类方法的返回值并打印</span>\n    <span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getResult</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>hook指定参数的类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">hookMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'methodname'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'java.lang.String'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'int'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n    <span class=\"pl-c\">//修改返回值</span>\n    <span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setResult</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fuck'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">//...</span>\n    <span class=\"pl-c\">//获取类方法的返回值并打印</span>\n    <span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getResult</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>修改静态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setStaticObjectField</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量名'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量值'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>修改动态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setObjectField</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量名'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量值'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">//或者</span>\n<span class=\"pl-c\">//param.thisObject 在hook回调方法中获取</span>\n<span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">setObjectField</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">thisObject</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量名'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量值'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>获取静态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getStaticObjectField</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量名'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>获取动态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getObjectField</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'变量名'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>主动调用动态方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">callMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'methodname'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p>主动调用静态方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callStaticMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n</tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">callStaticMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'com.test.test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'methodname'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-s\">'a'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p><code>replaceHookedMethod</code>中调用原方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">thisMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>param</td>\n<td>Object</td>\n<td>参数</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">//param在replaceHookedMethod中获取</span>\n<span class=\"pl-s1\">common</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">thisMethod</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">param</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p><a href=\"https://p-bakker.github.io/rhino/tutorials/scripting_java/\" rel=\"nofollow\">查看更多</a></p>\n<h3>\n<a id=\"user-content-frida\" class=\"anchor\" href=\"#frida\" aria-hidden=\"true\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>frida</h3>\n<p><a href=\"https://frida.re/docs/javascript-api/\" rel=\"nofollow\">查看更多</a></p>\n","childGitHubReadme":{"childMarkdownRemark":{"html":"<div align=\"center\">\n<h1>JsHook</h1>\n<p><a href=\"#\"><img src=\"https://img.shields.io/badge/-Xposed-3DDC84?style=flat&#x26;logo=Android&#x26;logoColor=white\" alt=\"Xposed\"></a>\n<a href=\"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/releases/latest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://img.shields.io/github/release/Xposed-Modules-Repo/me.jsonet.jshook.svg\" alt=\"GitHub release\"></a>\n<a href=\"https://t.me/jshookapp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://img.shields.io/static/v1?label=Telegram&#x26;message=Channel&#x26;color=0088cc\" alt=\"Telegram\"></a>\n<a href=\"https://t.me/jshookgroup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><img src=\"https://img.shields.io/static/v1?label=Telegram&#x26;message=Chat&#x26;color=0088cc\" alt=\"Telegram\"></a></p>\n<p>android中hook神器 支持java层和native层</p>\n<p><a href=\"https://github.com/Xposed-Modules-Repo/me.jsonet.jshook/blob/main/README.en.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">README of English</a></p>\n</div>\n<h2>关于</h2>\n<p>xposed是一个模块框架，可以在不接触任何apk的情况下更改系统和应用程序的行为。这意味着模块可以在不同版本甚至rom上工作而无需任何更改。</p>\n<p>jshook是对app注入rhino/frida，xposed模块开发需要一定的java语法基础，技术门槛高，而jshook注入的rhino/frida只需要会简短的js，即可用手机快速实现hook，并且hook支持java层和native层。</p>\n<h2>兼容</h2>\n<ol>\n<li>Xposed api 82</li>\n<li>Android 5 - 12</li>\n</ol>\n<h2>如何使用</h2>\n<h3>如何启用脚本</h3>\n<p>启用脚本前请确认选择的应用已开启hook服务选项，如果是lsposed非全局作用域在激活时除了勾选系统还需勾选对应脚本生效的应用，每次更改脚本内容都需要重启一下被hook的app。</p>\n<h3>如何选择注入框架</h3>\n<p>如果你对xposed的hook方法比较熟，推荐rhino，使用js调用xposed框架的api，且兼容性高；而frida属于另一个hook框架，需要对frida有一定的了解，上手较难，且不支持部分机型和app。</p>\n<pre><code class=\"language-js\">common.hookAllMethods('android.app.Application', 'onCreate', function (param) {\n    //你的脚本代码\n});\n</code></pre>\n<h2>脚本说明</h2>\n<h3>通用</h3>\n<p>日志打印：</p>\n<pre><code class=\"language-js\">common.log('...');\n</code></pre>\n<p>消息提示：</p>\n<pre><code class=\"language-js\">common.toast('...');\n</code></pre>\n<p>获取Context：</p>\n<pre><code class=\"language-js\">common.getcontext();\n</code></pre>\n<h3>rhino</h3>\n<p>获取LoadPackageParam</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getlpparam</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td colspan=\"4\" align=\"center\">无</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.getlpparam();\n</code></pre>\n<p>获取类实例</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">findClass</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>classLoader</td>\n<td>ClassLoader</td>\n<td>类加载器</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.findClass('com.test.test',classLoader);\n</code></pre>\n<p>hook构造函数</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllConstructors</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.hookAllConstructors('com.test.test', function (param) {\n    //构造函数执行前\n    //打印构造函数接收到的第一个参数\n    common.log(param.args[0]);\n    //修改这个参数的值\n    param.args[0] = 'fuck';\n}, function (param) {\n    //构造函数执行后\n    //...\n});\n</code></pre>\n<p>hook指定参数的构造函数</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookConstructor</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>构造函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换构造函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.hookConstructor('com.test.test', ['java.lang.String', 'int'], function (param) {\n    //...\n}, function (param) {\n    //...\n});\n</code></pre>\n<p>hook类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookAllMethods</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.hookAllMethods('com.test.test', 'methodname', function (param) {\n    //...\n}, function (param) {\n    //...\n}, function (param) {\n    //调用原方法返回\n    return common.thisMethod(param);\n});\n</code></pre>\n<p>hook指定的类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookByMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>method</td>\n<td>Method</td>\n<td>方法对象</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.hookByMethod(method, function (param) {\n    //...\n    //修改返回值\n    param.setResult('fuck');\n}, function (param) {\n    //...\n    //获取类方法的返回值并打印\n    common.log(param.getResult());\n});\n</code></pre>\n<p>hook指定参数的类方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">hookMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>String</td>\n<td>类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数类型</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>beforeHookedMethod</td>\n<td>Function</td>\n<td>函数执行前</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>afterHookedMethod</td>\n<td>Function</td>\n<td>函数执行后</td>\n<td align=\"center\">N</td>\n</tr>\n<tr>\n<td>replaceHookedMethod</td>\n<td>Function</td>\n<td>替换函数执行过程</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.hookMethod('com.test.test', 'methodname', ['java.lang.String', 'int'], function (param) {\n    //...\n    //修改返回值\n    param.setResult('fuck');\n}, function (param) {\n    //...\n    //获取类方法的返回值并打印\n    common.log(param.getResult());\n});\n</code></pre>\n<p>修改静态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.setStaticObjectField('com.test.test', '变量名', '变量值');\n</code></pre>\n<p>修改动态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">setObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>fieldValue</td>\n<td>Object</td>\n<td>变量值</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.setObjectField('com.test.test', '变量名', '变量值');\n//或者\n//param.thisObject 在hook回调方法中获取\ncommon.setObjectField(param.thisObject, '变量名', '变量值');\n</code></pre>\n<p>获取静态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getStaticObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.getStaticObjectField('com.test.test', '变量名');\n</code></pre>\n<p>获取动态变量值</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">getObjectField</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>fieldName</td>\n<td>String</td>\n<td>变量名</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.getObjectField('com.test.test', '变量名');\n</code></pre>\n<p>主动调用动态方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类名或者当前实例</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.callMethod('com.test.test', 'methodname', ['a', 1]);\n</code></pre>\n<p>主动调用静态方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">callStaticMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>Object</td>\n<td>类实例或类名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<tr>\n<td>methodMame</td>\n<td>String</td>\n<td>方法名</td>\n<td align=\"center\">Y</td>\n</tr>\n<tr>\n<td>paramTypes</td>\n<td>Object[]</td>\n<td>参数值</td>\n<td align=\"center\">N</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">common.callStaticMethod('com.test.test', 'methodname', ['a', 1]);\n</code></pre>\n<p><code>replaceHookedMethod</code>中调用原方法</p>\n<table>\n<thead>\n<tr>\n<td colspan=\"4\" align=\"center\">thisMethod</td>\n</tr>\n<tr>\n<td>参数</td>\n<td>参数类型</td>\n<td>参数说明</td>\n<td>是否必填</td>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>param</td>\n<td>Object</td>\n<td>参数</td>\n<td align=\"center\">Y</td>\n</tr>\n</tbody>\n</table>\n<p>示例：</p>\n<pre><code class=\"language-js\">//param在replaceHookedMethod中获取\ncommon.thisMethod(param);\n</code></pre>\n<p><a href=\"https://p-bakker.github.io/rhino/tutorials/scripting_java/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查看更多</a></p>\n<h3>frida</h3>\n<p><a href=\"https://frida.re/docs/javascript-api/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">查看更多</a></p>"}},"summary":"android中hook神器 支持java层和native层 / hook artifact in android support java layer and native layer","scope":["android"],"sourceUrl":null,"hide":false,"additionalAuthors":null,"updatedAt":"2022-06-27T18:34:45Z","createdAt":"2022-02-25T03:07:29Z","stargazerCount":59}